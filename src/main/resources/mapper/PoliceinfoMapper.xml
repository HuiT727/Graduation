<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.PoliceinfoMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Policeinfo">
    <id column="police_id" jdbcType="INTEGER" property="policeId" />
    <result column="police_account" jdbcType="VARCHAR" property="policeAccount" />
    <result column="police_pwd" jdbcType="VARCHAR" property="policePwd" />
    <result column="police_name" jdbcType="VARCHAR" property="policeName" />
    <result column="police_phone" jdbcType="VARCHAR" property="policePhone" />
    <result column="police_sex" jdbcType="VARCHAR" property="policeSex" />
    <result column="police_card" jdbcType="VARCHAR" property="policeCard" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    police_id, police_account, police_pwd, police_name, police_phone, police_sex, police_card
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.PoliceinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from policeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from policeinfo
    where police_id = #{policeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from policeinfo
    where police_id = #{policeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.PoliceinfoExample">
    delete from policeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Policeinfo">
    insert into policeinfo (police_id, police_account, police_pwd, 
      police_name, police_phone, police_sex, 
      police_card)
    values (#{policeId,jdbcType=INTEGER}, #{policeAccount,jdbcType=VARCHAR}, #{policePwd,jdbcType=VARCHAR}, 
      #{policeName,jdbcType=VARCHAR}, #{policePhone,jdbcType=VARCHAR}, #{policeSex,jdbcType=VARCHAR}, 
      #{policeCard,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Policeinfo">
    insert into policeinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="policeId != null">
        police_id,
      </if>
      <if test="policeAccount != null">
        police_account,
      </if>
      <if test="policePwd != null">
        police_pwd,
      </if>
      <if test="policeName != null">
        police_name,
      </if>
      <if test="policePhone != null">
        police_phone,
      </if>
      <if test="policeSex != null">
        police_sex,
      </if>
      <if test="policeCard != null">
        police_card,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="policeId != null">
        #{policeId,jdbcType=INTEGER},
      </if>
      <if test="policeAccount != null">
        #{policeAccount,jdbcType=VARCHAR},
      </if>
      <if test="policePwd != null">
        #{policePwd,jdbcType=VARCHAR},
      </if>
      <if test="policeName != null">
        #{policeName,jdbcType=VARCHAR},
      </if>
      <if test="policePhone != null">
        #{policePhone,jdbcType=VARCHAR},
      </if>
      <if test="policeSex != null">
        #{policeSex,jdbcType=VARCHAR},
      </if>
      <if test="policeCard != null">
        #{policeCard,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.PoliceinfoExample" resultType="java.lang.Long">
    select count(*) from policeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update policeinfo
    <set>
      <if test="record.policeId != null">
        police_id = #{record.policeId,jdbcType=INTEGER},
      </if>
      <if test="record.policeAccount != null">
        police_account = #{record.policeAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.policePwd != null">
        police_pwd = #{record.policePwd,jdbcType=VARCHAR},
      </if>
      <if test="record.policeName != null">
        police_name = #{record.policeName,jdbcType=VARCHAR},
      </if>
      <if test="record.policePhone != null">
        police_phone = #{record.policePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.policeSex != null">
        police_sex = #{record.policeSex,jdbcType=VARCHAR},
      </if>
      <if test="record.policeCard != null">
        police_card = #{record.policeCard,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update policeinfo
    set police_id = #{record.policeId,jdbcType=INTEGER},
      police_account = #{record.policeAccount,jdbcType=VARCHAR},
      police_pwd = #{record.policePwd,jdbcType=VARCHAR},
      police_name = #{record.policeName,jdbcType=VARCHAR},
      police_phone = #{record.policePhone,jdbcType=VARCHAR},
      police_sex = #{record.policeSex,jdbcType=VARCHAR},
      police_card = #{record.policeCard,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Policeinfo">
    update policeinfo
    <set>
      <if test="policeAccount != null">
        police_account = #{policeAccount,jdbcType=VARCHAR},
      </if>
      <if test="policePwd != null">
        police_pwd = #{policePwd,jdbcType=VARCHAR},
      </if>
      <if test="policeName != null">
        police_name = #{policeName,jdbcType=VARCHAR},
      </if>
      <if test="policePhone != null">
        police_phone = #{policePhone,jdbcType=VARCHAR},
      </if>
      <if test="policeSex != null">
        police_sex = #{policeSex,jdbcType=VARCHAR},
      </if>
      <if test="policeCard != null">
        police_card = #{policeCard,jdbcType=VARCHAR},
      </if>
    </set>
    where police_id = #{policeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Policeinfo">
    update policeinfo
    set police_account = #{policeAccount,jdbcType=VARCHAR},
      police_pwd = #{policePwd,jdbcType=VARCHAR},
      police_name = #{policeName,jdbcType=VARCHAR},
      police_phone = #{policePhone,jdbcType=VARCHAR},
      police_sex = #{policeSex,jdbcType=VARCHAR},
      police_card = #{policeCard,jdbcType=VARCHAR}
    where police_id = #{policeId,jdbcType=INTEGER}
  </update>
</mapper>