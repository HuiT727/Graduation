<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.EnterpriseinfoMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Enterpriseinfo">
    <id column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="enterprise_name" jdbcType="VARCHAR" property="enterpriseName" />
    <result column="enterprise_account" jdbcType="VARCHAR" property="enterpriseAccount" />
    <result column="enterprise_pwd" jdbcType="VARCHAR" property="enterprisePwd" />
    <result column="legal_card" jdbcType="VARCHAR" property="legalCard" />
    <result column="legal_name" jdbcType="VARCHAR" property="legalName" />
    <result column="enterprise_tel" jdbcType="VARCHAR" property="enterpriseTel" />
    <result column="enterprise_address" jdbcType="VARCHAR" property="enterpriseAddress" />
    <result column="enterprise_email" jdbcType="VARCHAR" property="enterpriseEmail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    enterprise_id, enterprise_name, enterprise_account, enterprise_pwd, legal_card, legal_name, 
    enterprise_tel, enterprise_address, enterprise_email
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.EnterpriseinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from enterpriseinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enterpriseinfo
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enterpriseinfo
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.EnterpriseinfoExample">
    delete from enterpriseinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Enterpriseinfo">
    insert into enterpriseinfo (enterprise_id, enterprise_name, enterprise_account, 
      enterprise_pwd, legal_card, legal_name, 
      enterprise_tel, enterprise_address, enterprise_email
      )
    values (#{enterpriseId,jdbcType=INTEGER}, #{enterpriseName,jdbcType=VARCHAR}, #{enterpriseAccount,jdbcType=VARCHAR}, 
      #{enterprisePwd,jdbcType=VARCHAR}, #{legalCard,jdbcType=VARCHAR}, #{legalName,jdbcType=VARCHAR}, 
      #{enterpriseTel,jdbcType=VARCHAR}, #{enterpriseAddress,jdbcType=VARCHAR}, #{enterpriseEmail,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Enterpriseinfo">
    insert into enterpriseinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="enterpriseName != null">
        enterprise_name,
      </if>
      <if test="enterpriseAccount != null">
        enterprise_account,
      </if>
      <if test="enterprisePwd != null">
        enterprise_pwd,
      </if>
      <if test="legalCard != null">
        legal_card,
      </if>
      <if test="legalName != null">
        legal_name,
      </if>
      <if test="enterpriseTel != null">
        enterprise_tel,
      </if>
      <if test="enterpriseAddress != null">
        enterprise_address,
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseName != null">
        #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseAccount != null">
        #{enterpriseAccount,jdbcType=VARCHAR},
      </if>
      <if test="enterprisePwd != null">
        #{enterprisePwd,jdbcType=VARCHAR},
      </if>
      <if test="legalCard != null">
        #{legalCard,jdbcType=VARCHAR},
      </if>
      <if test="legalName != null">
        #{legalName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseTel != null">
        #{enterpriseTel,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseAddress != null">
        #{enterpriseAddress,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.EnterpriseinfoExample" resultType="java.lang.Long">
    select count(*) from enterpriseinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enterpriseinfo
    <set>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseName != null">
        enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseAccount != null">
        enterprise_account = #{record.enterpriseAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.enterprisePwd != null">
        enterprise_pwd = #{record.enterprisePwd,jdbcType=VARCHAR},
      </if>
      <if test="record.legalCard != null">
        legal_card = #{record.legalCard,jdbcType=VARCHAR},
      </if>
      <if test="record.legalName != null">
        legal_name = #{record.legalName,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseTel != null">
        enterprise_tel = #{record.enterpriseTel,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseAddress != null">
        enterprise_address = #{record.enterpriseAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseEmail != null">
        enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enterpriseinfo
    set enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      enterprise_account = #{record.enterpriseAccount,jdbcType=VARCHAR},
      enterprise_pwd = #{record.enterprisePwd,jdbcType=VARCHAR},
      legal_card = #{record.legalCard,jdbcType=VARCHAR},
      legal_name = #{record.legalName,jdbcType=VARCHAR},
      enterprise_tel = #{record.enterpriseTel,jdbcType=VARCHAR},
      enterprise_address = #{record.enterpriseAddress,jdbcType=VARCHAR},
      enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Enterpriseinfo">
    update enterpriseinfo
    <set>
      <if test="enterpriseName != null">
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseAccount != null">
        enterprise_account = #{enterpriseAccount,jdbcType=VARCHAR},
      </if>
      <if test="enterprisePwd != null">
        enterprise_pwd = #{enterprisePwd,jdbcType=VARCHAR},
      </if>
      <if test="legalCard != null">
        legal_card = #{legalCard,jdbcType=VARCHAR},
      </if>
      <if test="legalName != null">
        legal_name = #{legalName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseTel != null">
        enterprise_tel = #{enterpriseTel,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseAddress != null">
        enterprise_address = #{enterpriseAddress,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
    </set>
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Enterpriseinfo">
    update enterpriseinfo
    set enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      enterprise_account = #{enterpriseAccount,jdbcType=VARCHAR},
      enterprise_pwd = #{enterprisePwd,jdbcType=VARCHAR},
      legal_card = #{legalCard,jdbcType=VARCHAR},
      legal_name = #{legalName,jdbcType=VARCHAR},
      enterprise_tel = #{enterpriseTel,jdbcType=VARCHAR},
      enterprise_address = #{enterpriseAddress,jdbcType=VARCHAR},
      enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR}
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
</mapper>